(defmacro push (obj place)
  `(set ,place (cons ,obj ,place)))

(defun handle-if (form)
  nil)

(def special-form-handlers { 'if handle-if })

(defun compile-form (form)
  (let (special-form-handler (map-get special-form-handlers (car form)))
    (if special-form-handler (special-form-handler form)
      (let (ret nil code form)
            (if (is-builtin? (car code))
                (progn
                  (push `(CALL_BUILTIN ,(env-get (car code))) ret)
                  (set code (cdr code)))
                nil)
            (for (elt code)
                (if (cons? elt)
                    (set ret (concat (concat (compile-form elt) `((CONS))) ret))
                    (progn
                      (push `(CONS) ret)
                      (push `(PUSH ,elt) ret))))
            (push `(PUSH ,nil) ret)
            ret))))

(defun compile (code)
  (if (list? code)
      (compile-form code)
    `(PUSH ,code)))
